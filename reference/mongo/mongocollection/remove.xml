<?xml version="1.0" encoding="utf-8"?>

<!-- $Revision$ -->
<refentry xml:id="mongocollection.remove" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCollection::remove</refname>
  <refpurpose>Remove records from this collection</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool|array</type><methodname>MongoCollection::remove</methodname>
   <methodparam choice="opt"><type>array</type><parameter>criteria</parameter><initializer>array()</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;    
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>criteria</parameter>
     </term>
     <listitem>
      <para>
       Description of records to remove.
      </para>
     </listitem>
    </varlistentry>   
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem>
      <para>
       Options for remove.
       <itemizedlist>
        <listitem>
         <para>
          <literal>"justOne"</literal>
         </para>
         <para>
          Remove at most one record matching this criteria.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"safe"</literal>
         </para>
         <para>
          Can be a boolean or integer, defaults to &false;.  If &false;, the 
          program continues executing without waiting for a database response. 
          If &true;, the program will wait for the database response and throw a
          <classname>MongoCursorException</classname> if the update did not 
          succeed.  
         </para>
         <para>
          If you are using replication and the master has changed, using "safe" 
          will make the driver disconnect from the master, throw and exception, 
          and attempt to find a new master on the next operation (your 
          application must decide whether or not to retry the operation on the
          new master). 
         </para>
         <para>
          If you <emphasis>do not</emphasis> use "safe" with a replica set and 
          the master changes, there will be no way for the driver to know about 
          the change so it will continuously and silently fail to write.
         </para>
         <para>
          If <literal>safe</literal> is an integer, will replicate the
          update to that many machines before returning success (or throw an
          exception if the replication times out, see wtimeout).  This overrides
          the w variable set on the collection.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"fsync"</literal>
         </para>
         <para>
          Boolean, defaults to &false;.  Forces the update to be synced to 
          disk before returning success.  If &true;, a safe update is implied
          and will override setting <literal>safe</literal> to &false;.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"timeout"</literal>
         </para>
         <para>
          Integer, defaults to <literal>MongoCursor::$timeout</literal>.  If 
          "safe" is set, this sets how long (in milliseconds) for the client to
          wait for a database response.  If the database does not respond within
          the timeout period, a <classname>MongoCursorTimeoutException</classname>
          will be thrown.
         </para>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>   
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   If <parameter>safe</parameter> was set, returns an array containing the
   status of the remove.  Otherwise, returns a boolean representing if the
   array was not empty (an empty array will not be inserted).  The fields in
   this array are decribed in the documentation for
   <function>MongoCollection::insert</function>.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Throws <classname>MongoCursorException</classname> if the "safe" option is 
   set and the remove fails.
  </para>
  <para>
   Throws <classname>MongoCursorTimeoutException</classname> if the "safe" 
   option is set and the operation takes longer than 
   <varname>MongoCursor::$timeout</varname> milliseconds to complete.  This does
   not kill the operation on the server, it is a client-side timeout.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>1.0.5</entry>
       <entry>
        Changed second parameter to an array of options.  Pre-1.0.5, the
        second parameter was a boolean indicating the "justOne" option and
        there was no safe option.
       </entry>
      </row>
      <row>
       <entry>1.0.9</entry>
       <entry>
        Added ability to pass integers to "safe" options (only accepted booleans
        before) and added "fsync" option.
       </entry>
      </row>
      <row>
       <entry>1.0.9</entry>
       <entry>
        The return type was changed to be an array containing error
        information if the "safe" option is used, otherwise it is a boolean as
        before.
       </entry>
      </row>
      <row>
       <entry>1.0.11</entry>
       <entry>
        Disconnects on "not master" errors if "safe" is set.
       </entry>
      </row>
      <row>
       <entry>1.2.0</entry>
       <entry>
        Added timeout option.
       </entry>
      </row>
      <row>
       <entry>1.2.11</entry>
       <entry>
       Emits <constant>E_DEPRECATED</constant> when <parameter>options</parameter> is <type>scalar</type>.
       </entry>
      </row>
      <row>
       <entry>1.3.0</entry>
       <entry>
        The <parameter>options</parameter> parameter does no longer accept
        just a boolean to signify "justOne". Instead, this now has to be done
        with <literal>array('justOne' => true)</literal>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>MongoCollection::remove</function> with justOne example</title>
   <programlisting role="php">
<![CDATA[
<?php

$radioactive = $db->radioactive;

// count how much more plutonium there is
$remaining = $radioactive->count(array('type' => 94));

$halflife = $remaining/2;

// remove half of it
while ($halflife > 0) {
    $radioactive->remove(array('type' => 94), array("justOne" => true));
    $halflife--;
}

?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>MongoCollection::insert</function></member>
   <member><function>MongoCollection::update</function></member>
   <member>MongoDB core docs on <link xlink:href="&url.mongodb.dochub.remove;">remove</link>.</member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
