<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<refentry xml:id="function.eval" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>eval</refname>
  <refpurpose>Evaluate a string as PHP code</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>eval</methodname>
   <methodparam><type>string</type><parameter>code_str</parameter></methodparam>
  </methodsynopsis>
  <para>
   Evaluates the string given in <parameter>code_str</parameter> as PHP code.
  </para>
  <para>
   There are some factors to keep in mind when using
   <function>eval</function>. Remember that the string passed must be valid
   PHP code, including things like terminating statements with a semicolon so
   the parser doesn't die on the line after the <function>eval</function>,
   and properly escaping things in <parameter>code_str</parameter>. To mix
   HTML output and PHP code you can use a closing PHP tag to leave PHP mode.
  </para>
  <para>
   Also remember that variables given values under <function>eval</function>
   will retain these values in the main script afterwards.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>code_str</parameter></term>
     <listitem>
      <para>
       The code string to be evaluated.
       <parameter>code_str</parameter> does not have to contain <link
       linkend="language.basic-syntax.phpmode">PHP Opening tags</link>.
      </para>
      <para>
       A <literal>return</literal> statement will immediately terminate the
       evaluation of the string . 
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>eval</function> returns &null; unless 
   <literal>return</literal> is called in the evaluated code, in which case
   the value passed to <literal>return</literal> is returned. If there is a
   parse error in the evaluated code, <function>eval</function> returns
   &false; and execution of the following code continues normally. It is
   not possible to catch a parse error in <function>eval</function>
   using <function>set_error_handler</function>.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>eval</function> example - simple text merge</title>
    <programlisting role="php">
<![CDATA[
<?php
$string = 'cup';
$name = 'coffee';
$str = 'This is a $string with my $name in it.';
echo $str. "\n";
eval("\$str = \"$str\";");
echo $str. "\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
This is a $string with my $name in it.
This is a cup with my coffee in it.
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;

  &note.language-construct;

  &tip.ob-capture;
  <note>
   <para>
    In case of a fatal error in the evaluated code, the whole script exits.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>call_user_func</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
