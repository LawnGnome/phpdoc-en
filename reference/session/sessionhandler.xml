<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<phpdoc:classref xml:id="class.sessionhandler" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>The SessionHandler class</title>
 <titleabbrev>SessionHandler</titleabbrev>

 <partintro>

<!-- {{{ SessionHandler intro -->
  <section xml:id="sessionhandler.intro">
   &reftitle.intro;
   <para>
    <classname>SessionHandler</classname> a special class that can be used to extend
    the current internal PHP session save handler by using inheritance.  There are six methods which
    wrap the six session save handler callbacks.  By default PHP uses the <parameter>files</parameter>
    save handler as defined by <link linkend="ini.session.save-handler">session.save_handler</link>.
    Others are provided by PHP extensions such as SQLite (as <parameter>sqlite</parameter>),
    Memcache (as <parameter>memcache</parameter>), and Memcached (as <parameter>Memcached</parameter>).
   </para>
   <para>
    This class can be extended, and it's methods overridden by inheritance including
    the ability to call the parent class methods.  This allows one for example, to intercept the
    <parameter>read</parameter> and <parameter>write</parameter> methods to encrypt/decrypt the
    session data and then pass the result to and from the parent class.
   </para>
   <para>
    Because the <classname>SessionHandler</classname> wraps the current internal save handler
    methods, the above example of encryption can be applied to any internal save handler without
    having to know the internals of the handlers.
   </para>
   <para>
    To use this class, pass an instance of this class or one extending it
    to <function>session_set_save_handler</function>.  This will cause which ever
    native (internal) session handler in use to be wrapped by that instance.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="sessionhandler.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>SessionHandler</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>SessionHandler</classname>
     </ooclass>

     <oointerface>
      <interfacename>SessionHandlerInterface</interfacename>
     </oointerface>
    </classsynopsisinfo>
<!-- }}} -->

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.sessionhandler')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->

  </section>
  <section xml:id="sessionhandler.examples">
   <example>
    <title>
     Using <classname>SessionHandler</classname> to add encryption to internal PHP save handlers.
    </title>
    <programlisting role="php">
<![CDATA[
<?php
class EncryptedSessionHandler implements SessionHandler
{
    private $key;

    public function __construct($key)
    {
        $this->key = $key
    }

    public function read($id)
    {
        $data = parent::read($id);

        return mycrypt_decrypt(MCRYPT_3DES, $this->key, $data, MCRYPT_MODE_ECB);
    }

    public function write($id, $data)
    {
        $data = mcrypt_encrypt(MCRYPT_3DES, $this->key, $data, MCRYPT_MODE_ECB);

        return parent::write($id, $data);
    }
}

// we'll intercept the native 'files' handler, but will equally work
// with other internal native handlers like 'sqlite', 'memcache' or 'memcached'
// which are provided by PHP extensions.
ini_set('session.save_handler', 'files');
$handler = new EncryptedSessionHandler('mykey');
session_set_save_handler($handler, true);
session_start();

// proceed to set and retrieve values by key from $_SESSION
]]>
    </programlisting>
   </example>
  </section>

 </partintro>

 &reference.session.entities.sessionhandler;

</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
