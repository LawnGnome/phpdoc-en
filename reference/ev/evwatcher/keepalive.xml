<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="evwatcher.keepalive" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>EvWatcher::keepalive</refname>
  <refpurpose>Configures whether to keep the loop from returning</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>EvWatcher::keepalive</methodname>
   <methodparam choice="opt"><type>bool</type><parameter>value</parameter></methodparam>
  </methodsynopsis>
  <para>
  Configures whether to keep the loop from returning. If you set keepalive
  <parameter>value</parameter> to &false;, then even though your watcher is
  active, it won't keep <methodname>Ev::run</methodname> or
  <methodname>EvLoop::run</methodname> from returning.
  </para>
  <para>
  Watchers have keepalive <parameter>value</parameter> &true; by default.
  </para>
  <para>
  Clearing keepalive status may be useful in cases when you wouldn&apos;t want
  to keep
  <methodname>Ev::run</methodname>/<methodname>EvLoop::run</methodname> from
  returning just because of the(possibly long running watcher - a socket
    watcher etc.)
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>value</parameter></term>
    <listitem>
     <para>
     If you set keepalive
     <parameter>value</parameter> to &false;, then even though your watcher is
     active, it won't keep <methodname>Ev::run</methodname> or
     <methodname>EvLoop::run</methodname> from returning.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
  Returns the previous state.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Register an I/O watcher for some UDP socket but do not keep the
   event loop from running just because of that watcher.</title>
   <programlisting role="php">
<![CDATA[
<?php
$udp_socket = ...
$udp_watcher = new EvIo($udp_socket, Ev::READ, function () { /* ... */ });
$udp_watcher->keepalive(FALSE);
?>
]]>
   </programlisting>
  </example>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
