<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- Based on UPGRADING version 322438. Work in progess !-->

<appendix xml:id="migration55" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Migrating from PHP 5.4.x to PHP 5.5.x</title>
 <simpara>
  &manual.migration.seealso;
  <link linkend="migration5">5.0.x</link>,
  <link linkend="migration51">5.1.x</link>,
  <link linkend="migration52">5.2.x</link>,
  <link linkend="migration53">5.3.x</link> and
  <link linkend="migration53">5.4.x</link>.
 </simpara>

 <sect1 xml:id="migration55.changes">
  <title>What has changed in PHP 5.5.x</title>
  <simpara>
   Most improvements in PHP 5.5.x have no impact on existing code.  There are
   a <link linkend="migration55.incompatible">few incompatibilities</link>
   and <link linkend="migration55.new-features">new features</link> that should
   be considered, and code should be tested before switching PHP
   versions in production environments.
  </simpara>
  <simpara>
   For systems being upgraded from an older version of PHP, the relevant
   documentation is available at:
  </simpara>
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="migration54">Upgrade Notes for PHP 5.4.x</link>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="migration53">Upgrade Notes for PHP 5.3.x</link>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="migration52">Upgrade Notes for PHP 5.2.x</link>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="migration51">Upgrade Notes for PHP 5.1.x</link>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="migration5">Migrating from PHP 4 to PHP 5</link>.
    </simpara>
   </listitem>
  </itemizedlist>
 </sect1>

 <sect1 xml:id="migration55.incompatible">
  <title>Backward Incompatible Changes</title>
  <simpara>
   Although most existing PHP 5 code should work without changes, please take
   note of some backward incompatible changes:
  </simpara>
  
  <sect2 xml:id="migration55.incompatible.windows">
   <title>Windows XP and 2003 support dropped</title>
   
   <para>
    Support for Windows XP and 2003 has been dropped. Windows builds of PHP
    now require Windows Vista or newer.
   </para>
  </sect2>

  <sect2 xml:id="migration55.incompatible.case">
   <title>Case insensitivity no longer locale specific</title>
   
   <para>
    All case insensitive matching for function, class and constant names is
    now performed in a locale independent manner according to ASCII rules.
    This improves support for languages using the Latin alphabet with unusual
    collating rules, such as Turkish and Azeri.
   </para>
   <para>
    This may cause issues for code that uses case insensitive matches for
    non-ASCII characters in multibyte character sets (including UTF-8), such
    as accented characters in many European languages. If you have a
    non-English, non-ASCII code base, then you will need to test that you are
    not inadvertently relying on this behaviour before deploying PHP 5.5 to
    production systems.
   </para>
  </sect2>

  <sect2 xml:id="migration55.incompatible.guid">
   <title>PHP logo GUIDs removed</title>

   <para>
    The GUIDs that previously resulted in PHP outputting various logos have
    been removed. This includes the removal of the functions to return those
    GUIDs. The removed functions are:
   </para>

   <itemizedlist>
    <listitem>
     <simpara>
      <function>php_logo_guid</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>php_egg_logo_guid</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>php_real_logo_guid</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>zend_logo_guid</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.new-features">
  <title>New features</title>

  <sect2 xml:id="migration55.new-features.generators">
   <title><link linkend="language.generators">Generators</link> added</title>

   <para>
    Support for <link linkend="language.generators">generators</link> has been
    added via the <command>yield</command> keyword. Generators provide an easy
    way to implement simple iterators without the overhead or complexity of
    implementing a class that implements the <classname>Iterator</classname>
    interface.
   </para>

   <para>
    A simple example that reimplements the <function>range</function>
    function as a generator (at least for positive <literal>step</literal>
    values):
   </para>

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function xrange($start, $limit, $step = 1) {
    for ($i = $start; $i <= $limit; $i += $step) {
        yield $i;
    }
}

echo 'Single digit odd numbers: ';

/* Note that an array is never created or returned,
 * which saves memory. */ 
foreach (xrange(1, 9, 2) as $number) {
    echo "$number ";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Single digit odd numbers: 1 3 5 7 9 
]]>
    </screen>
   </informalexample>
  </sect2>

  <sect2 xml:id="migration55.new-features.finally">
   <title><link linkend="language.exceptions"><literal>finally</literal></link> keyword added</title>

   <para>
    <literal>try</literal>-<literal>catch</literal> blocks now support a
    <link linkend="language.exceptions"><literal>finally</literal></link>
    block for code that should be run regardless of whether an exception has
    been thrown or not.
   </para>
  </sect2>

  <sect2 xml:id="migration55.new-features.foreach-list">
   <title><link linkend="control-structures.foreach"><literal>foreach</literal></link> now supports <function>list</function></title>

   <para>
    The <link linkend="control-structures.foreach">foreach</link> control
    structure now supports unpacking nested arrays into separate variables via
    the <function>list</function> construct. For example:
   </para>

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$array = [
    [1, 2],
    [3, 4],
];

foreach ($array as list($a, $b)) {
    echo "A: $a; B: $b\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
A: 1; B: 2
A: 3; B: 4
]]>
    </screen>
   </informalexample>

   <para>
    Further documentation is available on the
    <link linkend="control-structures.foreach.list">foreach</link> manual
    page.
   </para>
  </sect2>

  <sect2 xml:id="migration55.new-features.empty">
   <title><function>empty</function> supports arbitrary expressions</title>

   <para>
    Passing an arbitrary expression instead of a variable to
    <function>empty</function> is now supported. For example:
   </para>

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function always_false() {
    return false;
}

if (empty(always_false())) {
    echo 'This will be printed.';
}

if (empty(true)) {
    echo 'This will not be printed.';
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
This will be printed.
]]>
    </screen>
   </informalexample>
  </sect2>

  <sect2 xml:id="migration55.new-features.const-dereferencing">
   <title><type>array</type> and <type>string</type> literal dereferencing</title>

   <para>
    <type>Array</type> and <type>string</type> literals can now be
    dereferenced directly to access individual elements and characters:

    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
echo 'Array dereferencing: ';
echo [1, 2, 3][0];
echo "\n";

echo 'String dereferencing: ';
echo 'PHP'[0];
echo "\n";
?>
]]>
     </programlisting>
     &example.outputs;
     <screen>
<![CDATA[
Array dereferencing: 1
String dereferencing: P
]]>
     </screen>
    </informalexample>
   </para>
  </sect2>

  <sect2 xml:id="migration55.new-features.password">
   <title>New password hashing API</title>

   <para>
    A <link linkend="book.password">new password hashing API</link> that makes
    it easier to securely hash and manage passwords using the same underlying
    library as <function>crypt</function> in PHP has been added. See the
    documentation for <function>password_hash</function> for more detail.
   </para>
  </sect2>

  <sect2 xml:id="migration55.new-features.windows-apache">
   <title>Apache 2.4 handler supported on Windows</title>

   <para>
    The Apache 2.4 handler SAPI is now supported on Windows.
   </para>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.deprecated">
  <title>Deprecated features in PHP 5.5.x</title>

  <sect2 xml:id="migration55.deprecated.preg-replace-e">
   <title><function>preg_replace</function> <literal>/e</literal> modifier</title>

   <para>
    The <function>preg_replace</function> <literal>/e</literal> modifier is
    now deprecated. Instead, use the
    <function>preg_replace_callback</function> function.
   </para>
  </sect2>

  <sect2 xml:id="migration55.deprecated.intl">
   <title><link linkend="book.intl">intl</link> deprecations</title>

   <para>
    <methodname>IntlDateFormatter::setTimeZoneID</methodname> and
    <function>datefmt_set_timezone_id</function> are now deprecated. Instead,
    use the <methodname>IntlDateFormatter::setTimeZone</methodname> method and
    <function>datefmt_set_timezone</function> function, respectively.
   </para>
  </sect2>

  <sect2 xml:id="migration55.deprecated.mcrypt">
   <title><link linkend="book.mcrypt">mcrypt</link> deprecations</title>

   <simpara>
    The following functions have been deprecated:
   </simpara>

   <itemizedlist>
    <listitem>
     <simpara>
      <function>mcrypt_cbc</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>mcrypt_cfb</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>mcrypt_ecb</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>mcrypt_ofb</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.changed-functions">
  <title>Changed Functions</title>

  <sect2 xml:id="migration55.changed-functions.core">
   <title>PHP Core</title>

   <itemizedlist>
    <listitem>
     <simpara>
      <function>set_error_handler</function> can now be called with &null; as
      an argument to reset the error handler.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      When called with &null;, <function>set_error_handler</function> and
      <function>set_exception_handler</function> now return the previous error
      or exception handler, respectively.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>pack</function> and <function>unpack</function> now support the
      <literal>Z</literal> format character for null-padded strings.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>unpack</function>'s <literal>a</literal> format no longer
      strips trailing null bytes, bringing it into line with Perl's behaviour.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>unpack</function>'s <literal>A</literal> format now strips all
      trailing ASCII whitespace, bringing it into line with Perl's behaviour.
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="migration55.changed-functions.intl">
   <title><link linkend="book.intl">intl</link></title>

   <itemizedlist>
    <listitem>
     <simpara>
      <methodname>MessageFormatter::format</methodname> and related functions
      now accept named arguments and mixed numeric and named arguments when PHP
      is linked to ICU 4.8 or later.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>MessageFormatter::format</methodname> and related functions
      no longer error when an insufficient number of arguments have been
      provided. Instead, the placeholders will not be substituted.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>MessageFormatter::format</methodname> and
      <methodname>MessageFormatter::parse</methodname> are no longer limited to
      second precision when dealing with times.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::__construct</methodname> and
      <function>datefmt_create</function> now accept
      <classname>IntlTimeZone</classname> and
      <classname>DateTimeZone</classname> objects for the
      <parameter>timezone</parameter> argument, and
      <classname>IntlCalendar</classname> objects for the
      <parameter>calendar</parameter> argument. Furthermore, if the time zone
      is omitted and the <parameter>calendar</parameter> doesn't specify a time
      zone, PHP's default time zone from
      <function>date_default_timezone_get</function> is now used instead of the
      default ICU time zone.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::getCalendar</methodname> and
      <function>datefmt_get_calendar</function> return false if the
      <classname>IntlDateFormatter</classname> object was created with an
      <classname>IntlCalendar</classname> instance instead of one of the
      <classname>IntlDateFormatter</classname> constants.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::setCalendar</methodname> and
      <function>datefmt_set_calendar</function> now accept
      <classname>IntlCalendar</classname> objects in addition to the
      <classname>IntlDateFormatter</classname> constants.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::format</methodname> and
      <function>datefmt_format</function> now accept
      <classname>IntlCalendar</classname> objects.
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.new-functions">
  <title>New Functions</title>

  <sect2 xml:id="migration55.new-functions.core">
   <title>PHP Core</title>

   <itemizedlist>
    <listitem>
     <simpara>
      <function>boolval</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>password_get_info</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>password_hash</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>password_needs_rehash</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>password_verify</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="migration55.new-functions.hash">
   <title><link linkend="book.hash">Hash</link></title>

   <itemizedlist>
    <listitem>
     <simpara>
      <function>hash_pbkdf2</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
  
  <sect2 xml:id="migration55.new-functions.intl">
   <title><link linkend="book.intl">Intl</link></title>

   <itemizedlist>
    <listitem>
     <simpara>
      <function>datefmt_format_object</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>datefmt_get_calendar_object</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>datefmt_get_timezone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>datefmt_set_timezone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>datefmt_get_calendar_object</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_create_instance</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_keyword_values_for_locale</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_now</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_available_locales</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_time</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set_time</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_add</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set_time_zone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_after</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_before</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_roll</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_clear</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_field_difference</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_actual_maximum</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_actual_minimum</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_day_of_week_type</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_first_day_of_week</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_greatest_minimum</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_least_maximum</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_locale</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_maximum</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_minimal_days_in_first_week</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_minimum</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_time_zone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_type</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_weekend_transition</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_in_daylight_time</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_is_equivalent_to</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_is_lenient</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_is_set</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_is_weekend</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set_first_day_of_week</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set_lenient</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_equals</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_repeated_wall_time_option</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_skipped_wall_time_option</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set_repeated_wall_time_option</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set_skipped_wall_time_option</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_from_date_time</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_to_date_time</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_error_code</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_error_message</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlgregcal_create_instance</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlgregcal_set_gregorian_change</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlgregcal_get_gregorian_change</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlgregcal_is_leap_year</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_create_time_zone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_create_default</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_id</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_gmt</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_unknown</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_create_enumeration</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_count_equivalent_ids</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_create_time_zone_id_enumeration</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_canonical_id</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_region</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_tz_data_version</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_equivalent_id</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_use_daylight_time</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_offset</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_raw_offset</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_has_same_rules</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_display_name</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_dst_savings</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_from_date_time_zone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_to_date_time_zone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_error_code</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_error_message</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="migration55.new-features.spl">
   <title><link linkend="book.spl">SPL</link></title>

   <itemizedlist>
    <listitem>
     <simpara>
      <methodname>SplFixedArray::__wakeup</methodname>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.classes">
  <title>New Classes and Interfaces</title>

  <sect2 xml:id="migration55.classes.intl">
   <title><link linkend="book.intl">Intl</link></title>

   <itemizedlist>
    <listitem>
     <simpara>
      <classname>IntlCalendar</classname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <classname>IntlGregorianCalendar</classname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <classname>IntlTimeZone</classname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <classname>IntlBreakIterator</classname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <classname>IntlRuleBasedBreakIterator</classname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <classname>IntlCodePointBreakIterator</classname>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.new-methods">
  <title>New Methods</title>

  <sect2 xml:id="migration55.new-methods.intl">
   <title><link linkend="book.intl">Intl</link></title>

   <itemizedlist>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::formatObject</methodname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::getCalendarObject</methodname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::getTimeZone</methodname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::setTimeZone</methodname>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.extensions-other">
  <title>Other changes to extensions</title>

  <sect2 xml:id="migration55.extensions-other.intl">
   <title><link linkend="book.intl">Intl</link></title>

   <para>
    The <link linkend="book.intl">intl</link> extension now requires ICU 4.0
    or later.
   </para>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.global-constants">
  <title>New Global Constants</title>

  <sect2 xml:id="migration55.global-constants.mysqli">
   <title><link linkend="book.mysqli">MySQLi</link></title>

   <para>
    The <constant>MYSQLI_SERVER_PUBLIC_KEY</constant> option has been added
    for use with <function>mysqli_options</function>.
   </para>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.ini">
  <title>Changes to INI file handling</title>

  <sect2 xml:id="migrations55.ini.intl">
   <title><link linkend="book.intl">Intl</link></title>

   <para>
    The <literal>intl.use_exceptions</literal> configuration directive has
    been added, which controls the behaviour of intl when global errors occur
    in conjunction with the already extant <literal>intl.error_level</literal>
    configuration directive.
   </para>
  </sect2>

  <sect2 xml:id="migration55.ini.mysqlnd">
   <title><link linkend="book.mysqlnd">MySQLnd</link></title>

   <para>
    The <literal>mysqlnd.sha256_server_public_key</literal> configuration
    directive has been added to allow
    <link linkend="book.mysqli">mysqli</link> to use the new MySQL
    authentication protocol.
   </para>
  </sect2>
 </sect1>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
