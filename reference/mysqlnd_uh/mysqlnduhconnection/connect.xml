<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="mysqlnduhconnection.connect" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MysqlndUhConnection::connect</refname>
  <refpurpose>Open a new connection to the MySQL server</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>MysqlndUhConnection::connect</methodname>
   <methodparam><type>mysqlnd_connection</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>host</parameter></methodparam>
   <methodparam><type>string</type><parameter>use"</parameter></methodparam>
   <methodparam><type>string</type><parameter>password</parameter></methodparam>
   <methodparam><type>string</type><parameter>database</parameter></methodparam>
   <methodparam><type>int</type><parameter>port</parameter></methodparam>
   <methodparam><type>string</type><parameter>socket</parameter></methodparam>
   <methodparam><type>int</type><parameter>mysql_flags</parameter></methodparam>
  </methodsynopsis>
  <para>
   Open a new connection to the MySQL server.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>connection</parameter></term>
    <listitem>
     <para>
      Mysqlnd connection handle. Do not modify!
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>host</parameter></term>
    <listitem>
     <para>
       Can be either a host name or an IP address. Passing the NULL value or
       the string &quot;localhost&quot; to this parameter,
       the local host is assumed. When possible, pipes will be used
       instead of the TCP/IP protocol.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>user</parameter></term>
    <listitem>
     <para>
      The MySQL user name.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>password</parameter></term>
    <listitem>
     <para>
      If not provided or &null;,
      the MySQL server will attempt to authenticate
      the user against those user records which have no password only.
      This allows one username to be used with different permissions
      (depending on if a password as provided or not).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>database</parameter></term>
    <listitem>
     <para>
      If provided will specify the default database to be used when performing queries.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>port</parameter></term>
    <listitem>
     <para>
      Specifies the port number to attempt to connect to the MySQL server.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>socket</parameter></term>
    <listitem>
     <para>
      Specifies the socket or named pipe that should be used.
      If &null;, mysqlnd will default to
      <literal>/tmp/mysql.sock</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>mysql_flags</parameter></term>
    <listitem>
     <para>
      Connection options.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns &true; on success.
   Otherwise, returns &false;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>MysqlndUhConnection::connect</function> example</title>
        <programlisting role="php">
<![CDATA[
<?php
class proxy extends MysqlndUhConnection {
 public function connect($res, $host, $user, $passwd, $db, $port, $socket, $mysql_flags) {
   printf("%s(%s)\n", __METHOD__, var_export(func_get_args(), true));
   $ret = parent::connect($res, $host, $user, $passwd, $db, $port, $socket, $mysql_flags);
   printf("%s returns %s\n", __METHOD__, var_export($ret, true));
   return $ret;
 }
}
mysqlnd_uh_set_connection_proxy(new proxy());

$mysqli = new mysqli("localhost", "root", "", "test");
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
proxy::connect(array (
  0 => NULL,
  1 => 'localhost',
  2 => 'root',
  3 => '',
  4 => 'test',
  5 => 3306,
  6 => NULL,
  7 => 131072,
))
proxy::connect returns true
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     <function>mysqlnd_uh_set_connection_proxy</function>
    </member>
    <member>
     <function>mysqli_connect</function>
    </member>
    <member>
     <function>mysql_connect</function>
    </member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
